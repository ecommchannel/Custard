    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.4/jquery.min.js"></script>
<style>
  @media only screen and (min-width: 200px) {
    .modal-body{
      padding:50px 0;
    }
    .select-address{
      width:100%;
      margin:2px;
      padding:12px;
    } 
}

@media only screen and (min-width: 992px) {
    .modal-body{
      padding:50px 0;
    }
    .select-address{
      width:100%;
      margin:2px;
      padding:12px;
    }
}

  .title-address{
    text-align: center;
    font-weight: 800;
    font-size: 40px;
  }

</style>
<!-- The Modal -->
<div id="myModal" class="modal" style="z-index:100;">

  <!-- Modal content -->
  <div class="modal-content">
    <span class="close">&times;</span>
  <div class="modal-body">
    <h2 class="title-address">Address Finder</h2>
    <div style="color:red;" id="msgError"></div>
    <div class="description-address"><span>For quicker shipping address entry, find your area from the drop down fields.</span></div>
      <select class="select-address" id="province">
        <option>select Province</option>
      </select>
        <select class="select-address" id="city">
        <option>select City</option>
      </select>
        <select class="select-address" id="barangay">
        <option>select Barangay</option>
           </select>
    <input type="text" class="select-address" placeholder="Zip Code" id="zip" disabled>
     <input type="text" class="select-address" placeholder="House or Unit Number / Street Name / Landmark" id="street_address">
   <button id="gatherAddressbtn" style="background-color: white; padding: 12px; float: right; width: 20%;">Submit</button>
  </div>
  </div>

</div>


<script>
  const GetProvince = document.querySelector("#province"),GetCity = document.querySelector("#city"),GetBarangay = document.querySelector("#barangay"), gatherAddressbtn=document.querySelector("#gatherAddressbtn");
 const customer_address = JSON.parse(localStorage.getItem("customer_address"));
  var arr = JSON.parse(localStorage.getItem("arrProvince"));
    if (arr != null) {
      province = [];
      var data = JSON.parse(localStorage.arrProvince);
      for (let i = 0; i < data.province.length; i++) {
        const arrP = `${
          data.province[i]
        }`;
        province.push(arrP);
      }
      $("#province").html(province.join(""));
    } else {
      url = "https://tools.gabcgfs.com/address_finder_dev.php";
      province = [];
      province.push('<option value="" Selected>Select Province Address</option>');
      jQuery.ajax({url: url, type: "GET", dataType: "jsonp", contentType: "application/json; charset=UTF-8"}).done(function(json) {
        for (let i = 0; i < json.length; i++) {
          const arrP = `<option value="${
            json[i].PROVINCE
          }">${
            json[i].PROVINCE
          }</option>`;
          province.push(arrP);
        }
  
        $("#province").html(province.join(""));
        localStorage.setItem("arrProvince", JSON.stringify({province}));
      });

    }

    GetProvince.addEventListener("change",function getProvince() {
      $("#zip").val("");
      $("#barangay").html('<option value="" Selected>Select Barangay</option>');
      let province = $("#province").val();
      url = `https://tools.gabcgfs.com/address_finder_dev.php?PROVINCE=${province}`;
      City = [];
      City.push('<option value="" Selected>Select Town / City</option>');
      jQuery.ajax({url: url, type: "GET", dataType: "jsonp", contentType: "application/json; charset=UTF-8"}).done(function(json) {
        if (json != "") {
          for (let i = 0; i < json[0].CITY.length; i++) {
            const arrC = `<option value="${
              json[0].CITY[i].CITY
            }">${
              json[0].CITY[i].CITY
            }</option>`;
            City.push(arrC);
          }
        } else {
          City.push();
        }
  
        $("#city").html(City.join(""));
      });
    });

    ZipBarangay = [];
   GetCity.addEventListener("change", function getCity() {
      $("#zip").val("");
      let city = $("#city").val();
      url = `https://tools.gabcgfs.com/address_finder_dev.php?CITY=${city}`;
      Brgy = [];
      Brgy.push('<option value="" Selected>Select Barangay</option>');
      jQuery.ajax({url: url, type: "GET", dataType: "jsonp", contentType: "application/json; charset=UTF-8"}).done(function(json) {
        for (let i = 0; i < json[0].CITY[0].BARANGAY.length; i++) {
          const arrC = `<option value="${
            json[0].CITY[0].BARANGAY[i].BARANGAY
          }">${
            json[0].CITY[0].BARANGAY[i].BARANGAY
          }</option>`;
          const arrZ = [
            json[0].CITY[0].BARANGAY[i].BARANGAY,
            json[0].CITY[0].BARANGAY[i].ZIP,
            json[0].CITY[0].BARANGAY[i].latitude,
            json[0].CITY[0].BARANGAY[i].longitude
          ];
          Brgy.push(arrC);
          ZipBarangay.push(arrZ);
        }
        $("#barangay").html(Brgy.join(""));

            getBarangay(customer_address.barangay);

      function getBarangay(barangay) {

// Function to find the value for a given location
        function findValueForLocation(locationName) {
          for (let i = 0; i < ZipBarangay.length; i++) {

            if (ZipBarangay[i][0] === locationName) {
              return ZipBarangay[i][1];
            }
          }
          return null; // Return null if location is not found
        }
        function findValueForlat(locationName) {
          for (let i = 0; i < ZipBarangay.length; i++) {
            if (ZipBarangay[i][0] === locationName) {
              return ZipBarangay[i][2];
            }
          }
          return null; // Return null if location is not found
        }
        function findValueForlong(locationName) {
          for (let i = 0; i < ZipBarangay.length; i++) {
            if (ZipBarangay[i][0] === locationName) {
              return ZipBarangay[i][3];
            }
          }
          return null; // Return null if location is not found
        }

        const getZip = findValueForLocation(barangay);
        const getlat = findValueForlat(barangay);
        const getlong = findValueForlong(barangay);
        $("#zip").val(getZip);
        getListStore(getlat, getlong);
      }
      });
    });

   GetBarangay.addEventListener("change",function getBarangay() {
    let barangay = $("#barangay").val();
    // Function to find the value for a given location
    function findValueForLocation(locationName) {
      for (let i = 0; i < ZipBarangay.length; i++) {
        if (ZipBarangay[i][0] === locationName) {
          return ZipBarangay[i][1];
        }
      }
      return null; // Return null if location is not found
    }

    const value = findValueForLocation(barangay);
    $("#zip").val(value);
     
   
  });

  function getListStore(lat, long) {

    html_loading = `<div style="display: flex; justify-content: center;"><span class="loader">Loading</span></div>`;
    document.querySelector(".nearBy").innerHTML = html_loading;

    function nearbydata(lat1, lon1, lat2, lon2) {
      const R = 6371; // Radius of the earth in km
      const dLat = deg2rad(lat2 - lat1);
      const dLon = deg2rad(lon2 - lon1);
      const a = Math.sin(dLat / 2) * Math.sin(dLat / 2) + Math.cos(deg2rad(lat1)) * Math.cos(deg2rad(lat2)) * Math.sin(dLon / 2) * Math.sin(dLon / 2);
      const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));
      const distance = R * c; // Distance in km
      return distance.toFixed(2);
    }

    const lat1 = lat;
    const lon1 = long;
    let url = "https://omniproxy.goldenabc.com/storelocations/Shopify/Api/GetStoreLocations?brand=penshoppe";
    fetch(url).then((response) => response.json()).then((json) => getlocation(json));

    function getlocation(data) {
      let arr_data = [];
      let arr = data.message;

      for (let i = 0; i < arr.length; i++) {
        const Title = arr[i].Title;
        const City = arr[i].City;
        const Province = arr[i].Province;
        const Zipcode = arr[i].Zipcode;
        const Latitude = arr[i].Latitude;
        const Longitude = arr[i].Longitude;
        const listStore = nearbydata(lat1, lon1, Latitude, Longitude);
        const listaddress = `${
          arr[i].Street
        } ${
          arr[i].City
        } ${
          arr[i].Country
        }`;

        if (Longitude != null && Latitude != null && Title != "" && Title != "null") {
          if (listStore <= 10) {
            html = `<div>
             <div class="radio__input">
      <input
        class="input-radio" onclick="getStoreListData('${Title}','${listaddress}','${City}','${Province}','${Zipcode}')"
        type="radio"
        value="${i}"
        name="checkout[attributes][id]"
        id="checkout_delivery_option_id_${i}"
        data-checkout-total-shipping="Free"
        data-checkout-total-shipping-cents="0"
      />
    </div>
    <label class="radio__label" for="checkout_delivery_option_id_${i}"
      ><div class="radio__label__primary">
        <div>${Title}</div>
        <div class="small-text">${listaddress}</div>
        <div class="small-text pickup-instructions show-on-mobile">
          Usually ready in 24 hours
        </div>
      </div>
      <div class="radio__label__accessory">
        <div class="content-box__emphasis">Free</div>
        <div class="small-text pickup-instructions hide-on-mobile">
          Usually ready in 24 hours
        </div>
        <span style="font-size: small; width: 10%">${listStore} Km</span>
      </div></label
    ></div>
                `;
            arr_data.push(html);
          }
        }
      }

      const locationData = arr_data.map((htmlString) => {
        const tempDiv = document.createElement("div");
        tempDiv.innerHTML = htmlString;
        const distanceText = tempDiv.querySelector("span:last-child").textContent;
        const distanceKm = parseFloat(distanceText.replace(" Km", ""));
        return {html: htmlString, distance: distanceKm};
      });

// Sort the location data by distance
      locationData.sort((a, b) => a.distance - b.distance);

// Rebuild the sorted HTML elements
      const sortedLocationElements = locationData.map((data) => data.html);

// Now you can use sortedLocationElements to update your HTML container
      if (sortedLocationElements.join("") == "") {
        document.querySelector(".nearBy").innerHTML = `<div style="display: flex; justify-content: center;"><h1 style="
            padding: 0 12px;
            background-color: red;
            color: white;
            font-weight: 400;
            width: 100%;
            text-align: -webkit-center;
            ">There is no store near you</h1></div>`;
      } else {
        document.querySelector(".nearBy").innerHTML = sortedLocationElements.join('');
      }
    }
  }


    gatherAddressbtn.addEventListener("click", function gatherAddress(){
    if($('#province').val() == '' || $('#city').val() == '' || $('#barangay').val() == '' || $('#street_address').val() == ''){
      $('#msgError').html('Please complete the field.');
    }else{
        customer_address= `{"province":"${$('#province').val()}","city":"${$('#city').val()}","barangay":"${$('#barangay').val()}","zip":"${$('#zip').val()}","street_address":"${$('#street_address').val()}"}`;
         localStorage.setItem('customer_address',customer_address);
          window.location.reload();
    }
   
  });
</script>